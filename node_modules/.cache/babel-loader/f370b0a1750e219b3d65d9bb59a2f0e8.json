{"ast":null,"code":"var _jsxFileName = \"/home/rao/Desktop/material-kit-react-main/src/components/ChangePassword.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Grid, Link, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport Forget from 'src/components/Forget';\nimport zIndex from '@material-ui/core/styles/zIndex'; // \n\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginTop: \"150px\",\n    backgroundColor: \"white\",\n    zIndex: 2\n  }\n});\n\nconst ChangePassword = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  function moveTO() {} //   \n\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\n\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Login | Material Kit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            // backgroundColor: 'white',\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                email: 'demo@devias.io',\n                password: 'Password123'\n              },\n              validationSchema: Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                password: Yup.string().max(255).required('Password is required')\n              }),\n              onSubmit: () => {\n                navigate('/app/dashboard', {\n                  replace: true\n                });\n              },\n              children: ({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  style: {\n                    display: 'flex',\n                    justifyContent: \"center\",\n                    marginBottom: \"20px\",\n                    marginTop: \"20px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    width: \"250px\",\n                    src: \"static/images/avatars/logo.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    variant: \"h4\",\n                    paddingLeft: \"10px\",\n                    children: \"Change Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.password && errors.password),\n                  fullWidth: true,\n                  helperText: touched.password && errors.password,\n                  label: \"Current Password\",\n                  margin: \"normal\",\n                  name: \"password\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  type: \"password\",\n                  value: values.password,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.password && errors.password),\n                  fullWidth: true,\n                  helperText: touched.password && errors.password,\n                  label: \"New Password\",\n                  margin: \"normal\",\n                  name: \"password\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  type: \"password\",\n                  value: values.password,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.password && errors.password),\n                  fullWidth: true,\n                  helperText: touched.password && errors.password,\n                  label: \"Confirm Password\",\n                  margin: \"normal\",\n                  name: \"password\",\n                  onBlur: handleBlur,\n                  onChange: handleChange,\n                  type: \"password\",\n                  value: values.password,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  label: \"Some label\",\n                  variant: \"outlined\",\n                  type: showPassword ? \"text\" : \"password\" // <-- This is where the magic happens\n                  ,\n                  onChange: handleChange,\n                  InputProps: {\n                    // <-- This is where the toggle button is added.\n                    endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"end\",\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        \"aria-label\": \"toggle password visibility\",\n                        onClick: handleClickShowPassword,\n                        onMouseDown: handleMouseDownPassword,\n                        children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 77\n                        }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 94\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 165,\n                        columnNumber: 57\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 53\n                    }, this)\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    py: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    disabled: isSubmitting,\n                    fullWidth: true,\n                    size: \"large\",\n                    type: \"submit\",\n                    variant: \"contained\",\n                    onClick: moveTO,\n                    children: \"Sign in now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"end\",\n                    marginBottom: \"15px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    component: RouterLink,\n                    to: \"/forget\",\n                    variant: \"h6\",\n                    underline: \"hover\",\n                    children: \"Forget Password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChangePassword, \"TFJIOFX14N0rOyQW8iJ2zIJWxAA=\", false, function () {\n  return [useStyles, useNavigate];\n});\n\n_c = ChangePassword;\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/home/rao/Desktop/material-kit-react-main/src/components/ChangePassword.js"],"names":["Link","RouterLink","useNavigate","Helmet","Yup","Formik","Box","Button","Container","Grid","TextField","Typography","React","makeStyles","Card","Forget","zIndex","InputAdornment","IconButton","Visibility","VisibilityOff","useState","useStyles","root","minWidth","marginTop","backgroundColor","ChangePassword","classes","navigate","moveTO","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","display","justifyContent","textAlign","flexDirection","height","email","password","object","shape","string","max","required","replace","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","marginBottom","mb","Boolean","endAdornment","py"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    TextField,\n    Typography\n} from '@material-ui/core';\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport Forget from 'src/components/Forget';\nimport zIndex from '@material-ui/core/styles/zIndex';\n\n// \n\nimport { InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport {useState} from 'react';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        marginTop: \"150px\",\n        backgroundColor: \"white\",\n        zIndex: 2\n    },\n});\n\n\nconst ChangePassword = () => {\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    function moveTO() { }\n\n    //   \n\n    const [showPassword, setShowPassword] = useState(false);\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n    const handleMouseDownPassword = () => setShowPassword(!showPassword);\n\n    return (\n        <>\n            <Helmet>\n                <title>Login | Material Kit</title>\n            </Helmet>\n\n            <Container style={{ display: \"flex\", justifyContent: \"center\", textAlign: \"center\" }}>\n\n                <Card className={classes.root}>\n\n                    <Box\n                        sx={{\n                            // backgroundColor: 'white',\n                            display: 'flex',\n                            flexDirection: 'column',\n                            height: '100%',\n                            justifyContent: 'center',\n\n                        }}\n                    >\n                        <Container maxWidth=\"sm\">\n                            <Formik\n                                initialValues={{\n                                    email: 'demo@devias.io',\n                                    password: 'Password123'\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                                    password: Yup.string().max(255).required('Password is required')\n                                })}\n                                onSubmit={() => {\n                                    navigate('/app/dashboard', { replace: true });\n                                }}\n                            >\n                                {({\n                                    errors,\n                                    handleBlur,\n                                    handleChange,\n                                    handleSubmit,\n                                    isSubmitting,\n                                    touched,\n                                    values\n                                }) => (\n                                    <form onSubmit={handleSubmit}>\n                                        <Box style={{ display: 'flex', justifyContent: \"center\", marginBottom: \"20px\", marginTop: \"20px\" }}>\n                                            <img width=\"250px\" src=\"static/images/avatars/logo.png\" />\n                                        </Box>\n                                        <Box sx={{ mb: 3 }}>\n                                            <Typography\n                                                color=\"textPrimary\"\n                                                variant=\"h4\"\n                                                paddingLeft=\"10px\"\n                                            >\n                                                Change Password\n                                            </Typography>\n\n                                        </Box>\n                                        <Grid\n                                            container\n                                            spacing={3}\n                                        >\n\n\n                                        </Grid>\n\n\n                                        <TextField\n                                            error={Boolean(touched.password && errors.password)}\n                                            fullWidth\n                                            helperText={touched.password && errors.password}\n                                            label=\"Current Password\"\n                                            margin=\"normal\"\n                                            name=\"password\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.password}\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            error={Boolean(touched.password && errors.password)}\n                                            fullWidth\n                                            helperText={touched.password && errors.password}\n                                            label=\"New Password\"\n                                            margin=\"normal\"\n                                            name=\"password\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.password}\n                                            variant=\"outlined\"\n                                        />\n                                        <TextField\n                                            error={Boolean(touched.password && errors.password)}\n                                            fullWidth\n                                            helperText={touched.password && errors.password}\n                                            label=\"Confirm Password\"\n                                            margin=\"normal\"\n                                            name=\"password\"\n                                            onBlur={handleBlur}\n                                            onChange={handleChange}\n                                            type=\"password\"\n                                            value={values.password}\n                                            variant=\"outlined\"\n                                        />\n\n                                        <TextField\n                                        \n                                            label='Some label'\n                                            variant=\"outlined\"\n                                            type={showPassword ? \"text\" : \"password\"} // <-- This is where the magic happens\n                                            onChange={handleChange}\n                                            InputProps={{ // <-- This is where the toggle button is added.\n                                                endAdornment: (\n                                                    <InputAdornment position=\"end\">\n                                                        <IconButton\n                                                            aria-label=\"toggle password visibility\"\n                                                            onClick={handleClickShowPassword}\n                                                            onMouseDown={handleMouseDownPassword}\n                                                        >\n                                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                )\n                                            }}\n                                        />\n\n\n\n                                        <Box sx={{ py: 2 }}>\n                                            <Button\n                                                color=\"primary\"\n                                                disabled={isSubmitting}\n                                                fullWidth\n                                                size=\"large\"\n                                                type=\"submit\"\n                                                variant=\"contained\"\n                                                onClick={moveTO}\n                                            >\n                                                Sign in now\n                                            </Button>\n                                        </Box>\n                                        <Box style={{ display: \"flex\", justifyContent: \"end\", marginBottom: \"15px\" }}>\n\n                                            <Link component={RouterLink} to=\"/forget\" variant=\"h6\" underline=\"hover\">\n                                                Forget Password?\n                                            </Link>\n                                        </Box>\n\n                                    </form>\n                                )}\n                            </Formik>\n                        </Container>\n                    </Box>\n                </Card>\n            </Container>\n        </>\n    );\n};\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}