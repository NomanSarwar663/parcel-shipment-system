{"ast":null,"code":"var _jsxFileName = \"/home/rao/Desktop/material-kit-react-main/src/pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Box, Button, Container, Grid, Link, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport { useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { validateUser } from 'src/store/action';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginTop: \"150px\",\n    backgroundColor: \"white\",\n    zIndex: 2\n  }\n});\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const state = useSelector;\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function moveTO() {\n    let user = {\n      email,\n      password\n    };\n    dispatch(validateUser(user));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Login | Material Kit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            // backgroundColor: 'white',\n            display: 'flex',\n            flexDirection: 'column',\n            height: '100%',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            maxWidth: \"sm\",\n            children: /*#__PURE__*/_jsxDEV(Formik // initialValues={{\n            //   email: email,\n            //   password: 'Password123'\n            // }}\n            // validationSchema={Yup.object().shape({\n            //   email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n            //   password: Yup.string().max(255).required('Password is required')\n            // })}\n            // onSubmit={() => {\n            //   navigate('/app/dashboard', { replace: true });\n            // }}\n            , {\n              children: ({\n                errors,\n                handleBlur,\n                // handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  style: {\n                    display: 'flex',\n                    justifyContent: \"center\",\n                    marginBottom: \"20px\",\n                    marginTop: \"20px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    width: \"250px\",\n                    src: \"static/images/avatars/logo.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    variant: \"h4\",\n                    paddingLeft: \"10px\",\n                    children: \"Sign in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 3\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.email && errors.email),\n                  fullWidth: true,\n                  helperText: touched.email && errors.email,\n                  label: \"Email Address\",\n                  margin: \"normal\",\n                  name: \"email\",\n                  onBlur: handleBlur,\n                  onChange: e => {\n                    setEmail(e.target.value);\n                  },\n                  type: \"email\",\n                  value: email,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  error: Boolean(touched.password && errors.password),\n                  fullWidth: true,\n                  helperText: touched.password && errors.password,\n                  label: \"Password\",\n                  margin: \"normal\",\n                  name: \"password\",\n                  onBlur: handleBlur,\n                  onChange: e => {\n                    setPassword(e.target.value);\n                  },\n                  type: \"password\",\n                  value: password,\n                  variant: \"outlined\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    py: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"primary\",\n                    disabled: isSubmitting,\n                    fullWidth: true,\n                    size: \"large\",\n                    type: \"submit\",\n                    variant: \"contained\",\n                    onClick: moveTO,\n                    children: \"Sign in now\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  style: {\n                    display: \"flex\",\n                    justifyContent: \"end\",\n                    marginBottom: \"15px\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    component: RouterLink,\n                    to: \"/forget\",\n                    variant: \"h6\",\n                    underline: \"hover\",\n                    children: \"Forget Password?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Login, \"BA7kgwueT28F+ZzJ8FR8IB2+Pro=\", false, function () {\n  return [useStyles, useNavigate, useDispatch];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/rao/Desktop/material-kit-react-main/src/pages/Login.js"],"names":["Link","RouterLink","useNavigate","Helmet","Yup","Formik","Box","Button","Container","Grid","TextField","Typography","React","makeStyles","Card","useState","useDispatch","useSelector","validateUser","useStyles","root","minWidth","marginTop","backgroundColor","zIndex","Login","classes","navigate","dispatch","state","email","setEmail","password","setPassword","moveTO","user","display","justifyContent","textAlign","flexDirection","height","errors","handleBlur","handleSubmit","isSubmitting","touched","values","marginBottom","mb","Boolean","e","target","value","py"],"mappings":"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","sourcesContent":["import { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { Helmet } from 'react-helmet';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport {useState} from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport { validateUser } from 'src/store/action';\n\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    marginTop: \"150px\",\n    backgroundColor: \"white\",\n    zIndex: 2\n  },\n});\n\n\nconst Login = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  const dispatch = useDispatch();\n  const state = useSelector\n  \n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  \n\n\n\n  function moveTO() {\n    let user = {\n      email,\n      password\n    };\n\n    \n\n    dispatch(validateUser(user))\n\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Login | Material Kit</title>\n      </Helmet>\n\n      <Container style={{display: \"flex\", justifyContent: \"center\", textAlign: \"center\"}}>\n\n        <Card className={classes.root}>\n\n          <Box\n            sx={{\n              // backgroundColor: 'white',\n              display: 'flex',\n              flexDirection: 'column',\n              height: '100%',\n              justifyContent: 'center',\n        \n            }}\n          >\n            <Container maxWidth=\"sm\">\n              <Formik\n                // initialValues={{\n                //   email: email,\n                //   password: 'Password123'\n                // }}\n                // validationSchema={Yup.object().shape({\n                //   email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                //   password: Yup.string().max(255).required('Password is required')\n                // })}\n                // onSubmit={() => {\n                //   navigate('/app/dashboard', { replace: true });\n                // }}\n              >\n                {({\n                  errors,\n                  handleBlur,\n                  // handleChange,\n                  handleSubmit,\n                  isSubmitting,\n                  touched,\n                  values\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <Box style={{ display: 'flex', justifyContent: \"center\", marginBottom: \"20px\", marginTop: \"20px\" }}>\n                      <img width=\"250px\" src=\"static/images/avatars/logo.png\" />\n                    </Box>\n                    <Box sx={{ mb: 3 }}>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"h4\"\n                        paddingLeft=\"10px\"\n                      >\n                        Sign in\n                      </Typography>\n\n                    </Box>\n                    <Grid\n                      container\n                      spacing={3}\n                    >\n\n\n                    </Grid>\n\n                    <TextField\n                      error={Boolean(touched.email && errors.email)}\n                      fullWidth\n                      helperText={touched.email && errors.email}\n                      label=\"Email Address\"\n                      margin=\"normal\"\n                      name=\"email\"\n                      onBlur={handleBlur}\n                      onChange={(e) => { setEmail(e.target.value)}}\n                      type=\"email\"\n                      value={email}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      error={Boolean(touched.password && errors.password)}\n                      fullWidth\n                      helperText={touched.password && errors.password}\n                      label=\"Password\"\n                      margin=\"normal\"\n                      name=\"password\"\n                      onBlur={handleBlur}\n                      onChange={(e) => { setPassword(e.target.value)}}\n                      type=\"password\"\n                      value={password}\n                      variant=\"outlined\"\n                    />\n                    <Box sx={{ py: 2 }}>\n                      <Button\n                        color=\"primary\"\n                        disabled={isSubmitting}\n                        fullWidth\n                        size=\"large\"\n                        type=\"submit\"\n                        variant=\"contained\"\n                        onClick={moveTO}\n                      >\n                        Sign in now\n                      </Button>\n                    </Box>\n                    <Box style={{ display: \"flex\", justifyContent: \"end\" ,marginBottom: \"15px\"}}>\n                    \n                      <Link component={RouterLink}  to=\"/forget\" variant=\"h6\" underline=\"hover\">\n                        Forget Password?\n                      </Link>\n                    </Box>\n\n                  </form>\n                )}\n              </Formik>\n            </Container>\n          </Box>\n        </Card>\n      </Container>\n    </>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}