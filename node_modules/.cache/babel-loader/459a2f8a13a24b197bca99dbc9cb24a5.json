{"ast":null,"code":"import customers from '../__mocks__/customers';\nconst INITIAL_STATE = {\n  profile: {\n    email: 'abc@gmail.com',\n    userName: \"Katarina Smith\",\n    password: 123,\n    post: \"Senior Developer\"\n  },\n  profiles: customers,\n  User: {}\n};\n\nconst reducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"AUTH\":\n      return { ...state,\n        User: state.profiles.find(profile => {\n          profile.id == action.payload.email && profile.password == action.payload.password;\n\n          if (state.User !== null) {\n            localStorage.setItem;\n          }\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/rao/Desktop/material-kit-react-main/src/store/reducer.js"],"names":["customers","INITIAL_STATE","profile","email","userName","password","post","profiles","User","reducer","state","action","type","find","id","payload","localStorage","setItem"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAE,eADF;AAELC,IAAAA,QAAQ,EAAE,gBAFL;AAGLC,IAAAA,QAAQ,EAAE,GAHL;AAILC,IAAAA,IAAI,EAAE;AAJD,GADS;AAQlBC,EAAAA,QAAQ,EAAEP,SARQ;AASlBQ,EAAAA,IAAI,EAAE;AATY,CAAtB;;AAYA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGT,aAAT,EAAwBU,MAAxB,KAAmC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,IAAI,EAAEE,KAAK,CAACH,QAAN,CAAeM,IAAf,CAAqBX,OAAD,IAAa;AAACA,UAAAA,OAAO,CAACY,EAAR,IAAcH,MAAM,CAACI,OAAP,CAAeZ,KAA7B,IAAsCD,OAAO,CAACG,QAAR,IAAoBM,MAAM,CAACI,OAAP,CAAeV,QAAzE;;AACpC,cAAIK,KAAK,CAACF,IAAN,KAAe,IAAnB,EAAyB;AACrBQ,YAAAA,YAAY,CAACC,OAAb;AACH;AACJ,SAJK;AAFH,OAAP;;AAQJ;AACI,aAAOP,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAeD,OAAf","sourcesContent":["import customers from '../__mocks__/customers';\n\nconst INITIAL_STATE = {\n    profile: {\n        email: 'abc@gmail.com',\n        userName: \"Katarina Smith\",\n        password: 123,\n        post: \"Senior Developer\"\n    },\n\n    profiles: customers,\n    User: {}\n}\n\nconst reducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case \"AUTH\":\n            return {\n                ...state,\n                User: state.profiles.find((profile) => {profile.id == action.payload.email && profile.password == action.payload.password\n                    if (state.User !== null) {\n                        localStorage.setItem\n                    }\n                })\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}